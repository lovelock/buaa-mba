<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>高等数学基础 on MBA学习记录</title><link>https://buaa-mba.pages.dev/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/</link><description>Recent content in 高等数学基础 on MBA学习记录</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 22 Sep 2024 21:19:15 +0800</lastBuildDate><atom:link href="https://buaa-mba.pages.dev/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml"/><item><title>最小二乘法详解与拉格朗日求解过程</title><link>https://buaa-mba.pages.dev/p/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%B1%82%E8%A7%A3%E8%BF%87%E7%A8%8B/</link><pubDate>Sun, 22 Sep 2024 21:19:15 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95%E8%AF%A6%E8%A7%A3%E4%B8%8E%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%B1%82%E8%A7%A3%E8%BF%87%E7%A8%8B/</guid><description>&lt;h2 id="引言">引言
&lt;/h2>&lt;p>最小二乘法是一种广泛应用于数据拟合和统计建模的数学优化技术。它的基本思想是通过最小化误差的平方和，找到最佳的参数估计，以使得模型最符合观测数据。本文将详细介绍最小二乘法的原理、应用及其通过拉格朗日乘数法求解的过程。&lt;/p>
&lt;h2 id="一最小二乘法的基本原理">一、最小二乘法的基本原理
&lt;/h2>&lt;p>在最小二乘法中，我们希望通过建立一个数学模型来描述自变量与因变量之间的关系。假设我们有 n 个观测数据点，数据点的形式为 \((x_i, y_i)\)（其中 \(i = 1, 2, \ldots, n\)），我们希望找到一个函数 \(f(x)\) 来拟合这些数据。&lt;/p>
&lt;h3 id="1-目标函数">1. 目标函数
&lt;/h3>&lt;p>最小二乘法的目标是最小化残差平方和（RSS），即：&lt;/p>
\[
RSS = \sum_{i=1}^{n} (y_i - f(x_i))^2
\]&lt;p>通常情况下，我们假设 \(f(x)\) 是线性函数，形式为：&lt;/p>
\[
f(x) = \beta_0 + \beta_1 x
\]&lt;p>其中，\(\beta_0\) 和 \(\beta_1\) 是我们需要估计的参数。&lt;/p>
&lt;blockquote>
&lt;p>上面的RSS全称Residual Sum of Squares，和SSE(Sum of Squares for Error)是同一个概念，在某些情况下SSE可能会用在更广泛的上下文中，包括多种误差度量，而RSS特指基于残差的平方和。&lt;/p>
&lt;/blockquote>
&lt;h3 id="2-残差">2. 残差
&lt;/h3>&lt;p>残差 \(e_i\) 定义为观测值与预测值之间的差异：&lt;/p>
\[
e_i = y_i - (\beta_0 + \beta_1 x_i)
\]&lt;p>因此，残差平方和可以表示为：&lt;/p>
\[
RSS(\beta_0, \beta_1) = \sum_{i=1}^{n} e_i^2 = \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))^2
\]&lt;h2 id="二拉格朗日乘数法求解">二、拉格朗日乘数法求解
&lt;/h2>&lt;p>为了找到使得残差平方和最小的参数 \(\beta_0\) 和 \(\beta_1\)，我们可以使用拉格朗日乘数法。这种方法在约束优化中非常有效。&lt;/p>
&lt;h3 id="1-构建拉格朗日函数">1. 构建拉格朗日函数
&lt;/h3>&lt;p>在最小二乘法中，我们没有约束条件，因此我们可以直接对目标函数进行求导。我们定义拉格朗日函数 \(L\) 为：&lt;/p>
\[
L(\beta_0, \beta_1) = \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))^2
\]&lt;h3 id="2-求导数并设置为零">2. 求导数并设置为零
&lt;/h3>&lt;p>为了找到最优解，我们需要对 \(L\) 分别对 \(\beta_0\) 和 \(\beta_1\) 进行求导，并将导数设置为零。&lt;/p>
&lt;h4 id="a-对-beta_0-的导数">a. 对 \(\beta_0\) 的导数
&lt;/h4>\[
\frac{\partial L}{\partial \beta_0} = -2 \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i))
\]&lt;p>设置为零：&lt;/p>
\[
\sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i)) = 0
\]&lt;h4 id="b-对-beta_1-的导数">b. 对 \(\beta_1\) 的导数
&lt;/h4>\[
\frac{\partial L}{\partial \beta_1} = -2 \sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i)) x_i
\]&lt;p>设置为零：&lt;/p>
\[
\sum_{i=1}^{n} (y_i - (\beta_0 + \beta_1 x_i)) x_i = 0
\]&lt;h3 id="3-联立方程求解">3. 联立方程求解
&lt;/h3>&lt;p>通过上述两个方程，我们可以得到一组关于 \(\beta_0\) 和 \(\beta_1\) 的线性方程组。对这两个方程进行求解可以得到参数的最优估计。&lt;/p>
&lt;h4 id="a-方程一对-beta_0-的方程">a. 方程一（对 \(\beta_0\) 的方程）：
&lt;/h4>\[
n\bar{y} = n\beta_0 + \beta_1 \sum_{i=1}^{n} x_i
\]&lt;h4 id="b-方程二对-beta_1-的方程">b. 方程二（对 \(\beta_1\) 的方程）：
&lt;/h4>\[
\sum_{i=1}^{n} y_i x_i = \beta_0 \sum_{i=1}^{n} x_i + \beta_1 \sum_{i=1}^{n} x_i^2
\]&lt;p>这里，\(\bar{y}\) 是 \(y_i\) 的平均值。&lt;/p>
&lt;h3 id="4-解的最终表达式">4. 解的最终表达式
&lt;/h3>&lt;p>通过解这两个方程，我们可以得到 \(\beta_0\) 和 \(\beta_1\) 的具体值：&lt;/p>
\[
\beta_1 = \frac{\sum_{i=1}^{n} (x_i - \bar{x})(y_i - \bar{y})}{\sum_{i=1}^{n} (x_i - \bar{x})^2}
\]\[
\beta_0 = \bar{y} - \beta_1 \bar{x}
\]&lt;p>其中，\(\bar{x}\) 是 \(x_i\) 的平均值。&lt;/p>
&lt;h2 id="三总结">三、总结
&lt;/h2>&lt;p>最小二乘法是一种有效的数据拟合方法，广泛应用于回归分析中。通过最小化残差平方和，可以找到最佳的参数估计。在具体求解过程中，拉格朗日乘数法为我们提供了一种系统化的方法，使得求解过程清晰且高效。理解最小二乘法的原理和求解方法，对于数据分析和建模具有重要的理论和实践价值。&lt;/p></description></item><item><title>凸函数和凹函数的概念及其应用</title><link>https://buaa-mba.pages.dev/p/%E5%87%B8%E5%87%BD%E6%95%B0%E5%92%8C%E5%87%B9%E5%87%BD%E6%95%B0%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/</link><pubDate>Sun, 08 Sep 2024 21:35:07 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/%E5%87%B8%E5%87%BD%E6%95%B0%E5%92%8C%E5%87%B9%E5%87%BD%E6%95%B0%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/</guid><description>&lt;blockquote>
&lt;p>注意：关于凸函数和凹函数的定义国内外有争议，且定义完全相反，本文写的内容是国外通行的说法。国内以同济大学为代表的数学教材和本文描述的内容是相反的。&lt;/p>
&lt;p>考证1：&lt;a class="link" href="https://carmamaths.org/resources/jon/Preprints/Books/CUP/CUPold/np-convex.pdf" target="_blank" rel="noopener"
>CONVEX FUNCTIONS AND THEIR APPLICATIONS A contemporary approach&lt;/a>&lt;/p>
&lt;p>考证2：&lt;a class="link" href="https://zh.wikipedia.org/wiki/%E5%87%B9%E5%87%BD%E6%95%B0" target="_blank" rel="noopener"
>维基百科：凹函数&lt;/a>&lt;/p>
&lt;p>考证3: &lt;img src="https://buaa-mba.pages.dev/images/math/%e5%9b%bd%e5%86%85%e6%95%99%e6%9d%90%e5%87%b9%e5%87%b8%e5%87%bd%e6%95%b0.jpeg"
loading="lazy"
alt="国内教材凹凸函数"
>&lt;/p>
&lt;/blockquote>
&lt;h2 id="引言">引言
&lt;/h2>&lt;p>在数学分析和最优化理论中,凸函数和凹函数是两个非常重要的概念。它们具有一些独特的性质,在许多领域都有广泛的应用,包括运筹学、经济学和机器学习等。本文将详细介绍凸函数和凹函数的定义、特性以及一些典型的例子,并探讨它们在实际问题中的应用。&lt;/p>
&lt;h2 id="定义">定义
&lt;/h2>&lt;h3 id="凸函数">凸函数
&lt;/h3>&lt;p>如果一个函数 $f(x)$ 在定义域内的任意两点 $x_1$ 和 $x_2$ 之间的线段都位于函数图像的上方或恰好在函数图像上,那么这个函数就是凸函数。数学表达式如下:&lt;/p>
&lt;p>对于定义域内的任意两点 $x_1$ 和 $x_2$,以及 $0 \leq \theta \leq 1$,有:&lt;/p>
$$f(\theta x_1 + (1-\theta)x_2) \leq \theta f(x_1) + (1-\theta)f(x_2)$$&lt;h3 id="凹函数">凹函数
&lt;/h3>&lt;p>如果一个函数的相反数是凸函数,那么这个函数就是凹函数。也可以这样定义:如果一个函数 $f(x)$ 在定义域内的任意两点 $x_1$ 和 $x_2$ 之间的线段都位于函数图像的下方或恰好在函数图像上,那么这个函数就是凹函数。数学表达式如下:&lt;/p>
&lt;p>对于定义域内的任意两点 $x_1$ 和 $x_2$,以及 $0 \leq \theta \leq 1$,有:&lt;/p>
$$f(\theta x_1 + (1-\theta)x_2) \geq \theta f(x_1) + (1-\theta)f(x_2)$$&lt;h2 id="典型例子">典型例子
&lt;/h2>&lt;h3 id="凸函数例子">凸函数例子
&lt;/h3>&lt;p>一些常见的凸函数包括:&lt;/p>
&lt;ul>
&lt;li>二次函数: $f(x) = x^2$&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/math/004.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>指数函数: $f(x) = e^x$&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/math/005.png"
loading="lazy"
>&lt;/p>
&lt;ul>
&lt;li>绝对值函数: $f(x) = |x|$&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/math/006.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="凹函数例子">凹函数例子
&lt;/h3>&lt;p>一些常见的凹函数包括:&lt;/p>
&lt;ul>
&lt;li>对数函数: $f(x) = \log x$
&lt;img src="https://buaa-mba.pages.dev/images/math/007.png"
loading="lazy"
>&lt;/li>
&lt;li>负指数函数: $f(x) = -e^x$
&lt;img src="https://buaa-mba.pages.dev/images/math/008.png"
loading="lazy"
>&lt;/li>
&lt;li>平方根函数: $f(x) = \sqrt{x}$
&lt;img src="https://buaa-mba.pages.dev/images/math/009.png"
loading="lazy"
>&lt;/li>
&lt;/ul>
&lt;h2 id="凸函数和凹函数的性质">凸函数和凹函数的性质
&lt;/h2>&lt;p>凸函数和凹函数具有一些重要的性质,这些性质在分析和优化问题中非常有用。&lt;/p>
&lt;h3 id="凸函数的性质">凸函数的性质
&lt;/h3>&lt;ul>
&lt;li>凸函数在其定义域内是连续的。&lt;/li>
&lt;li>凸函数在其定义域内的任何区间上都是仿射函数的上界。&lt;/li>
&lt;li>凸函数的一阶导数(如果存在)在其定义域内是单调递增的。&lt;/li>
&lt;li>凸函数的二阶导数(如果存在)在其定义域内是非负的。&lt;/li>
&lt;/ul>
&lt;h3 id="凹函数的性质">凹函数的性质
&lt;/h3>&lt;ul>
&lt;li>凹函数在其定义域内是连续的。&lt;/li>
&lt;li>凹函数在其定义域内的任何区间上都是仿射函数的下界。&lt;/li>
&lt;li>凹函数的一阶导数(如果存在)在其定义域内是单调递减的。&lt;/li>
&lt;li>凹函数的二阶导数(如果存在)在其定义域内是非正的。&lt;/li>
&lt;/ul>
&lt;h2 id="凸函数和凹函数在优化问题中的应用">凸函数和凹函数在优化问题中的应用
&lt;/h2>&lt;p>由于凸函数和凹函数具有良好的数学性质,它们在优化问题中扮演着重要的角色。&lt;/p>
&lt;h3 id="凸优化问题">凸优化问题
&lt;/h3>&lt;p>如果目标函数是凸函数,且约束条件也是凸集,那么这个优化问题就是一个凸优化问题。凸优化问题具有全局最优解,并且可以使用高效的算法求解,例如内点法、椭球法等。&lt;/p>
&lt;h3 id="凹优化问题">凹优化问题
&lt;/h3>&lt;p>如果目标函数是凹函数,且约束条件也是凸集,那么这个优化问题就是一个凹优化问题。凹优化问题的目标是最大化目标函数,而不是最小化。与凸优化问题类似,凹优化问题也具有全局最优解,并且可以使用类似的算法求解。&lt;/p>
&lt;h3 id="应用举例">应用举例
&lt;/h3>&lt;p>凸优化和凹优化在许多领域都有广泛的应用,例如:&lt;/p>
&lt;ul>
&lt;li>机器学习中的支持向量机、逻辑回归等模型涉及凸优化问题。&lt;/li>
&lt;li>组合优化问题中的一些特殊情况可以转化为凸优化问题。&lt;/li>
&lt;li>金融投资组合优化中需要求解凸优化问题。&lt;/li>
&lt;li>通信系统中的功率控制和资源分配问题可以建模为凸优化问题。&lt;/li>
&lt;/ul>
&lt;h2 id="结论">结论
&lt;/h2>&lt;p>凸函数和凹函数是非常重要的数学概念,它们具有许多良好的性质,在优化理论和实际应用中扮演着关键角色。通过掌握凸函数和凹函数的定义、性质以及在优化问题中的应用,我们可以更好地理解和解决一些复杂的优化问题。&lt;/p></description></item><item><title>导数快速入门</title><link>https://buaa-mba.pages.dev/p/%E5%AF%BC%E6%95%B0%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link><pubDate>Sat, 07 Sep 2024 23:25:13 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/%E5%AF%BC%E6%95%B0%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid><description>&lt;p>导数是微积分中一个重要的概念，它在数学和物理学等领域中起着重要的作用。在本篇博客中，我们将深入探讨导数的概念，解释其意义，并给出一些常用的导数的对照表，帮助读者更好地理解和应用导数。&lt;/p>
&lt;h2 id="概念">概念
&lt;/h2>&lt;h3 id="什么是导数">什么是导数？
&lt;/h3>&lt;p>导数描述了函数在某一点上的变化率。它可以看作是函数在该点上的斜率，表示函数的瞬时变化率。具体而言，对于函数 \( f(x) \)，其在某一点 \( x_0 \) 处的导数表示为 \( f'(x_0) \) 或 \( \frac{dy}{dx} \bigg|_{x=x_0} \)。&lt;/p>
&lt;h3 id="数学定义">数学定义
&lt;/h3>&lt;p>函数 $f(x)$ 在点 $x_0$ 处的导数定义为:&lt;/p>
$$f'(x_0) = \lim_{h \to 0} \frac{f(x_0 + h) - f(x_0)}{h}$$&lt;p>这个极限如果存在，我们就说函数 $f(x)$ 在点 $x_0$ 处可导。&lt;/p>
&lt;h3 id="导数的意义">导数的意义
&lt;/h3>&lt;p>导数在数学和物理学中有着广泛的应用，它可以帮助我们理解函数的特性和变化过程。以下是导数的几个重要意义：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>瞬时变化率：导数告诉我们函数在某一点上的瞬时变化率。例如，对于位移函数，导数告诉我们物体在某一时刻的瞬时速度。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>斜率：导数也可以看作是函数图像上某一点处的切线的斜率。这个概念在曲线绘制、最优化、物理学等领域中都有重要的应用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最值和极值：通过求导，我们可以找到函数的最大值和最小值，以及函数的极值点。这对于优化问题和最优化算法非常重要。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="常见函数的导数推导">常见函数的导数推导
&lt;/h2>&lt;h3 id="幂函数-fx--xn">幂函数 $f(x) = x^n$
&lt;/h3>&lt;h4 id="一阶导数">一阶导数
&lt;/h4>$$\begin{aligned}
f'(x) &amp;= \lim_{h \to 0} \frac{(x+h)^n - x^n}{h} \\
&amp;= \lim_{h \to 0} \frac{x^n + nx^{n-1}h + \frac{n(n-1)}{2}x^{n-2}h^2 + ... - x^n}{h} \\
&amp;= \lim_{h \to 0} (nx^{n-1} + \frac{n(n-1)}{2}x^{n-2}h + ...) \\
&amp;= nx^{n-1}
\end{aligned}$$&lt;h4 id="二阶导数">二阶导数
&lt;/h4>$$f''(x) = n(n-1)x^{n-2}$$&lt;h3 id="指数函数-fx--ex">指数函数 $f(x) = e^x$
&lt;/h3>&lt;h4 id="一阶导数-1">一阶导数
&lt;/h4>$$\begin{aligned}
f'(x) &amp;= \lim_{h \to 0} \frac{e^{x+h} - e^x}{h} \\
&amp;= \lim_{h \to 0} \frac{e^x(e^h - 1)}{h} \\
&amp;= e^x \lim_{h \to 0} \frac{e^h - 1}{h} \\
&amp;= e^x
\end{aligned}$$&lt;h4 id="二阶导数-1">二阶导数
&lt;/h4>$$f''(x) = e^x$$&lt;h3 id="对数函数-fx--ln-x">对数函数 $f(x) = \ln x$
&lt;/h3>&lt;h4 id="一阶导数-2">一阶导数
&lt;/h4>$$\begin{aligned}
f'(x) &amp;= \lim_{h \to 0} \frac{\ln(x+h) - \ln x}{h} \\
&amp;= \lim_{h \to 0} \frac{1}{h} \ln(\frac{x+h}{x}) \\
&amp;= \lim_{h \to 0} \frac{1}{h} \ln(1 + \frac{h}{x}) \\
&amp;= \frac{1}{x}
\end{aligned}$$&lt;h4 id="二阶导数-2">二阶导数
&lt;/h4>$$f''(x) = -\frac{1}{x^2}$$&lt;h2 id="常用导数的对照表">常用导数的对照表
&lt;/h2>&lt;p>下面是一些常见函数的导数对照表，它们是求导常用的公式和规则：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>常数函数导数：
\( f(x) = c \)
\( f'(x) = 0 \)
例如：\( f(x) = 5, f'(x) = 0 \)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>幂函数导数：
\( f(x) = x^n \)
\( f'(x) = nx^{n-1} \)
例如：\( f(x) = x^3, f'(x) = 3x^2 \)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>指数函数导数：
\( f(x) = e^x \)
\( f'(x) = e^x \)
例如：\( f(x) = e^2, f'(x) = e^2 \)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对数函数导数：
\( f(x) = \log_a{x} \)
\( f'(x) = \frac{1}{x \ln{a}} \)
例如：\( f(x) = \log_2{x}, f'(x) = \frac{1}{x \ln{2}} \)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>三角函数导数：
\( f(x) = \sin{x} \)
\( f'(x) = \cos{x} \)
\( f(x) = \cos{x} \)
\( f'(x) = -\sin{x} \)
例如：\( f(x) = \sin{2x}, f'(x) = 2\cos{2x} \)&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="常见函数的导数图形">常见函数的导数图形
&lt;/h2>&lt;h3 id="幂函数yx3">幂函数$y=x^3$
&lt;/h3>&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/math/001.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="幂函数yx2">幂函数$y=x^2$
&lt;/h3>&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/math/002.png"
loading="lazy"
>&lt;/p>
&lt;p>这时你可能发现，在$x=2$的位置，两条线相交了！&lt;/p>
&lt;p>不是说好的是相切的吗？&lt;/p>
&lt;p>这是由于导数的几何意义是切线的斜率，而不是切线本身。&lt;/p>
&lt;p>具体来说,函数 $y=x^2$ 在 $x=2$ 时的切线方程为:&lt;/p>
$$y - y_0 = f'(x_0)(x - x_0)$$$$y - 4 = 2(x - 2)$$$$y = 2x$$&lt;p>所以函数 $y=x^2$ 在 $x=2$ 处的切线方程是 $y=2x$。但是,这个切线方程并不代表整个导数函数 $y=2x$,而只是在 $x=2$ 这一点上与原函数相切。&lt;/p>
&lt;p>导数函数 $y=2x$ 实际上是函数 $y=x^2$ 在每一个点处的切线斜率的集合。因此,在 $x=2$ 处,它们相交而不是相切是正常的。&lt;/p>
&lt;h3 id="三角函数-ysinx">三角函数 $y=\sin(x)$
&lt;/h3>&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/math/003.png"
loading="lazy"
>&lt;/p></description></item></channel></rss>