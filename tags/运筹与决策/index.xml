<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>运筹与决策 on MBA学习记录</title><link>https://buaa-mba.pages.dev/tags/%E8%BF%90%E7%AD%B9%E4%B8%8E%E5%86%B3%E7%AD%96/</link><description>Recent content in 运筹与决策 on MBA学习记录</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 12 Aug 2024 09:51:41 +0800</lastBuildDate><atom:link href="https://buaa-mba.pages.dev/tags/%E8%BF%90%E7%AD%B9%E4%B8%8E%E5%86%B3%E7%AD%96/index.xml" rel="self" type="application/rss+xml"/><item><title>Julia解决线性规划问题约束参数为0时的处理</title><link>https://buaa-mba.pages.dev/p/julia%E8%A7%A3%E5%86%B3%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E7%BA%A6%E6%9D%9F%E5%8F%82%E6%95%B0%E4%B8%BA0%E6%97%B6%E7%9A%84%E5%A4%84%E7%90%86/</link><pubDate>Mon, 12 Aug 2024 09:51:41 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/julia%E8%A7%A3%E5%86%B3%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%E9%97%AE%E9%A2%98%E7%BA%A6%E6%9D%9F%E5%8F%82%E6%95%B0%E4%B8%BA0%E6%97%B6%E7%9A%84%E5%A4%84%E7%90%86/</guid><description>&lt;img src="https://buaa-mba.pages.dev/images/julia/cover-01.png" alt="Featured image of post Julia解决线性规划问题约束参数为0时的处理" />&lt;p>在使用Julia画线性规划的可行域时遇到了一个奇怪的问题，这里记录一下问题的原因以及解决方案，不得不说大模型真是太厉害了（当然好像也没那么厉害）。&lt;/p>
&lt;h2 id="起因">起因
&lt;/h2>&lt;p>为了表达诸如$ax_1 + bx_2 &amp;lt;= c1$这种式子，大模型给出了一个自定义方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> &lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nd">@.&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后为了表示以下的约束&lt;/p>
$$
\left\{
\begin{array}{l}
x_1 + 2x_2 \leq 8 \\
4x_1 \leq 16 \\
4x_2 \leq 12 \\
\end{array}
\right.
$$&lt;p>这样表达到上面的&lt;code>plot_constaint&lt;/code>方法中就是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="line">&lt;span class="cl">&lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="排查问题">排查问题
&lt;/h2>&lt;p>然后我就发现怎么也画不出第二条线，吊诡的是julia在执行时也没有任何报错。最后仔细看这个方法的定义才发现是因为第二次调用的时候&lt;code>b=0&lt;/code>，到方法里&lt;code>b&lt;/code>成了除数，所以就出现了除以0，成了无效数字了。既然发现了问题的根源，就可以继续让大模型给出更完善的写法了，没想到它居然给出了4种解决方案！&lt;/p>
&lt;p>前面我说它厉害是因为它能这么彻底地解决问题，说它没有那么厉害是因为它第一次写这个方法的时候并没有考虑太多的边界情况，导致代码不够健壮。&lt;/p>
&lt;h2 id="解决方案">解决方案
&lt;/h2>&lt;blockquote>
&lt;p>你找到了问题的根源，非常好！确实，当 b = 0 时，会出现除以零的问题。在 Julia 中，我们可以通过几种方式来处理这种情况：&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用条件语句">使用条件语句
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> &lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">b&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nd">@.&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fill&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;x1 = &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用-isfinite-函数过滤掉无穷大的值">使用 &lt;code>isfinite&lt;/code> 函数过滤掉无穷大的值
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> &lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nd">@.&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">isfinite&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">valid&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">valid&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用-try-catch-块">使用 &lt;code>try-catch&lt;/code> 块
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> &lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nd">@.&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">catch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;x1 = &lt;/span>&lt;span class="si">$x&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@warn&lt;/span> &lt;span class="s">&amp;#34;Invalid constraint: &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用-iszero-函数">使用 &lt;code>iszero&lt;/code> 函数
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-julia" data-lang="julia">&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span> &lt;span class="n">plot_constraint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">iszero&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nd">@.&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">x1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elseif&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">iszero&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">plot!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;x1 = &lt;/span>&lt;span class="si">$x&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nd">@warn&lt;/span> &lt;span class="s">&amp;#34;Invalid constraint: &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x1 + &lt;/span>&lt;span class="si">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="s">x2 &amp;lt;= &lt;/span>&lt;span class="si">$c&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这些方法中，第4种方法可能是最全面的，因为它处理了所有可能的情况（b = 0, a ≠ 0 和 a = b = 0）。你可以根据你的具体需求选择最适合的方法。&lt;/p>
&lt;p>记住，当 b = 0 时，约束条件变成了一条垂直线 x1 = c/a（如果 a ≠ 0），所以我们需要特别处理这种情况。&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>大模型可以帮我们解决很多问题，但更多时候还是得人类去引导它解决问题，就像上面这个问题，你提出了&lt;code>b&lt;/code>可能为0，它甚至更进一步考虑到&lt;code>a&lt;/code>也可能等于0的情况，惊人。&lt;/p></description></item><item><title>Julia快速上手：为了实现线性规划</title><link>https://buaa-mba.pages.dev/p/julia%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E4%B8%BA%E4%BA%86%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</link><pubDate>Sun, 11 Aug 2024 22:34:21 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/julia%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E4%B8%BA%E4%BA%86%E5%AE%9E%E7%8E%B0%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</guid><description>&lt;p>众所周知，Julia就是为科学计算而生的语言，经过我的检验，它确实是很适合做科学计算，在做线性规划时其语句写出来非常接近自然语言，给人的感觉是用自然语言的方式把问题描述出来，然后就神奇地被Julia给解决了。这篇文章主要介绍Windows下如何安装Julia及做线性规划需要的几个库。&lt;/p>
&lt;h2 id="安装julia">安装Julia
&lt;/h2>&lt;p>推荐使用Winget进行安装，方便后期的管理。Winget是类似于macOS下的Homebrew的包管理工具。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">winget install julia -s msstore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这时候你会发现从CMD/PowerShell是没办法执行&lt;code>julia&lt;/code>命令的，这又是因为万恶的环境变量，而这也体现出winget相比Homebrew的缺陷：没有一个统一不变的路径，也就是说软件包实际是安装在每次对应的版本号的目录下的，但它会通过符号链接给出一个不带版本号的路径，所有通过Homebrew安装的formula的可执行文件都放在同一个路径下，只要把这个路径放在&lt;code>PATH&lt;/code>中，通过Homebrew新安装的软件包自然就可以直接执行了。而Windows上的winget并不会这样，所以我们需要把Julia的安装路径手动添加到环境变量&lt;code>Path&lt;/code>中，在我的环境下是这样（我居然还安装了一个PowerToys来简化这个过程，Windows可真是太好用啦！！！）。这样会有什么问题是显而易见的，等下次升级了Julia，这个路径要么就失效了，要么如果新版本不会覆盖旧版本，那么会发现安装了新版本，使用的还是老版本。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">C:\Users\frost\AppData\Local\Programs\Julia-1.10.4\bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装所需的包">安装所需的包
&lt;/h2>&lt;ol>
&lt;li>执行&lt;code>julia&lt;/code>进入JuliaREPL&lt;/li>
&lt;li>按&lt;code>]&lt;/code>进行pkg管理模式（这一步很重要）&lt;/li>
&lt;li>执行&lt;code>add JuMP GLPK Plots&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/julia/julia-installation.png"
loading="lazy"
alt="Julia交互界面"
>
有可能会有网络问题，请自行解决，这个需要安装非常多的依赖，很可能是由于安装了&lt;code>Plots&lt;/code>包的原因，毕竟需要画图，要的依赖就很多了。&lt;/p>
&lt;h2 id="编辑器支持">编辑器支持
&lt;/h2>&lt;p>这一步就很简单了，最简单的做法就是在VSCode里安装Julia扩展。&lt;/p>
&lt;p>&lt;img src="https://buaa-mba.pages.dev/images/julia/julia-example-01.png"
loading="lazy"
alt="Julia效果示例"
>&lt;/p>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>本文介绍了在Windows下如何安装Julia以及安装需要的科学计算和画图相关的包，接下来就可以回到介绍线性规划的文章继续阅读了。&lt;/p></description></item><item><title>Excel高效办公必备：10个强大函数及实用示例</title><link>https://buaa-mba.pages.dev/p/excel%E9%AB%98%E6%95%88%E5%8A%9E%E5%85%AC%E5%BF%85%E5%A4%8710%E4%B8%AA%E5%BC%BA%E5%A4%A7%E5%87%BD%E6%95%B0%E5%8F%8A%E5%AE%9E%E7%94%A8%E7%A4%BA%E4%BE%8B/</link><pubDate>Sat, 10 Aug 2024 22:54:31 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/excel%E9%AB%98%E6%95%88%E5%8A%9E%E5%85%AC%E5%BF%85%E5%A4%8710%E4%B8%AA%E5%BC%BA%E5%A4%A7%E5%87%BD%E6%95%B0%E5%8F%8A%E5%AE%9E%E7%94%A8%E7%A4%BA%E4%BE%8B/</guid><description>&lt;p>在日常工作中，Excel是我们处理数据、进行分析的得力助手。今天，我们将介绍10个强大的Excel函数，这些函数可以大大提高你的工作效率。我们不仅会解释每个函数的用途，还会提供具体的示例，帮助你更好地理解和应用这些函数。&lt;/p>
&lt;ol>
&lt;li>SUMPRODUCT（数组的乘积之和）&lt;/li>
&lt;/ol>
&lt;p>SUMPRODUCT函数可以计算多个数组中对应元素的乘积之和，非常适合用于加权计算或条件求和。&lt;/p>
&lt;p>示例：假设A列是产品价格，B列是销售数量。
公式：=SUMPRODUCT(A2:A10,B2:B10)
这将计算总销售额。&lt;/p>
&lt;ol start="2">
&lt;li>MMULT（矩阵乘法）&lt;/li>
&lt;/ol>
&lt;p>MMULT函数用于计算两个矩阵的乘积，在复杂的数学计算和数据分析中很有用。&lt;/p>
&lt;p>示例：假设A1:B3是第一个矩阵，C1:D2是第二个矩阵。
公式：=MMULT(A1:B3,C1:D2)
这将返回两个矩阵相乘的结果。&lt;/p>
&lt;ol start="3">
&lt;li>PRODUCT（乘积）&lt;/li>
&lt;/ol>
&lt;p>PRODUCT函数计算所有参数的乘积，适用于需要连乘的场景。&lt;/p>
&lt;p>示例：计算A1到A5单元格的乘积。
公式：=PRODUCT(A1:A5)&lt;/p>
&lt;ol start="4">
&lt;li>VLOOKUP（垂直查找）&lt;/li>
&lt;/ol>
&lt;p>VLOOKUP函数在表格的垂直列中查找指定的值，并返回该行中指定列的值。&lt;/p>
&lt;p>示例：假设A列是产品代码，B列是产品名称，C列是价格。
公式：=VLOOKUP(&amp;ldquo;A001&amp;rdquo;,A1:C100,2,FALSE)
这将返回代码为&amp;quot;A001&amp;quot;的产品名称。&lt;/p>
&lt;ol start="5">
&lt;li>INDEX（返回表格或区域中的值）和MATCH（查找项目在数组中的相对位置）&lt;/li>
&lt;/ol>
&lt;p>这两个函数经常一起使用，可以实现更灵活的查找。&lt;/p>
&lt;p>示例：在上述产品表中查找特定产品的价格。
公式：=INDEX(C1:C100,MATCH(&amp;ldquo;A001&amp;rdquo;,A1:A100,0))&lt;/p>
&lt;ol start="6">
&lt;li>SUMIF（条件求和）&lt;/li>
&lt;/ol>
&lt;p>SUMIF函数可以根据给定的条件对指定区域进行求和。&lt;/p>
&lt;p>示例：假设A列是部门，B列是销售额。
公式：=SUMIF(A1:A100,&amp;ldquo;销售部&amp;rdquo;,B1:B100)
这将计算销售部的总销售额。&lt;/p>
&lt;ol start="7">
&lt;li>COUNTIF（条件计数）&lt;/li>
&lt;/ol>
&lt;p>COUNTIF函数计算满足特定条件的单元格数量。&lt;/p>
&lt;p>示例：计算A列中&amp;quot;及格&amp;quot;的数量。
公式：=COUNTIF(A1:A100,&amp;ldquo;及格&amp;rdquo;)&lt;/p>
&lt;ol start="8">
&lt;li>IFERROR（错误处理）&lt;/li>
&lt;/ol>
&lt;p>IFERROR函数可以在公式返回错误时显示自定义的结果，使表格更加美观。&lt;/p>
&lt;p>示例：处理除以零的错误。
公式：=IFERROR(A1/B1,&amp;ldquo;无法计算&amp;rdquo;)&lt;/p>
&lt;ol start="9">
&lt;li>CONCATENATE（字符串拼接）&lt;/li>
&lt;/ol>
&lt;p>CONCATENATE函数用于将多个文本字符串合并为一个字符串。&lt;/p>
&lt;p>示例：合并姓名。
公式：=CONCATENATE(A1,&amp;quot; &amp;ldquo;,B1)
如果A1是&amp;quot;张&amp;rdquo;，B1是&amp;quot;三&amp;quot;，结果将是&amp;quot;张 三&amp;quot;。&lt;/p>
&lt;ol start="10">
&lt;li>RAND（随机数）&lt;/li>
&lt;/ol>
&lt;p>RAND函数生成0到1之间的随机数，常用于模拟和抽样。&lt;/p>
&lt;p>示例：生成1到100之间的随机整数。
公式：=INT(RAND()*100)+1&lt;/p>
&lt;p>实际应用示例：销售数据分析&lt;/p>
&lt;p>假设我们有一个包含产品代码、产品名称、单价和销售数量的销售数据表。我们可以结合使用上述函数来进行一些有趣的分析：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>计算总销售额：
=SUMPRODUCT(C2:C100,D2:D100) // C列是单价，D列是数量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查找特定产品的销售数量：
=INDEX(D2:D100,MATCH(&amp;ldquo;A001&amp;rdquo;,A2:A100,0)) // A列是产品代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>计算销售额超过1000的产品数量：
=COUNTIF(E2:E100,&amp;quot;&amp;gt;1000&amp;quot;) // E列是每种产品的销售额（=C*D）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>生成产品报告：
=CONCATENATE(&amp;ldquo;产品 &amp;ldquo;,B2,&amp;rdquo; 的销售额为 &amp;ldquo;,E2,&amp;rdquo; 元&amp;rdquo;) // B列是产品名称&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>通过灵活运用这些函数，你可以大大提高数据处理和分析的效率。记住，熟能生巧，多加练习才能真正掌握这些强大的工具。希望这篇文章能够帮助你在Excel中更加得心应手，成为办公室的效率之王！&lt;/p></description></item><item><title>Excel神器VLOOKUP：简单功能背后的强大应用</title><link>https://buaa-mba.pages.dev/p/excel%E7%A5%9E%E5%99%A8vlookup%E7%AE%80%E5%8D%95%E5%8A%9F%E8%83%BD%E8%83%8C%E5%90%8E%E7%9A%84%E5%BC%BA%E5%A4%A7%E5%BA%94%E7%94%A8/</link><pubDate>Tue, 30 Jul 2024 21:19:54 +0800</pubDate><guid>https://buaa-mba.pages.dev/p/excel%E7%A5%9E%E5%99%A8vlookup%E7%AE%80%E5%8D%95%E5%8A%9F%E8%83%BD%E8%83%8C%E5%90%8E%E7%9A%84%E5%BC%BA%E5%A4%A7%E5%BA%94%E7%94%A8/</guid><description>&lt;p>在Excel的众多函数中，VLOOKUP无疑是最受欢迎和最有用的函数之一。虽然它的基本功能看似简单——在表格中查找并返回特定的值，但其实际应用范围却远远超出了这个简单的描述。今天，让我们深入探讨VLOOKUP的强大之处，并通过三个具体的例子来展示它如何在实际业务中发挥关键作用。&lt;/p>
&lt;h2 id="vlookup的强大之处">VLOOKUP的强大之处
&lt;/h2>&lt;ol>
&lt;li>数据整合：轻松合并来自多个工作表或文件的数据。&lt;/li>
&lt;li>自动化：大幅减少手动数据输入，提高效率。&lt;/li>
&lt;li>灵活性：适用于各种数据类型和查找需求。&lt;/li>
&lt;li>大数据处理：能够快速在包含数十万行的数据集中查找信息。&lt;/li>
&lt;li>动态更新：创建可根据用户输入自动更新的报表。&lt;/li>
&lt;li>错误减少：通过自动化查找过程，显著降低人为错误。&lt;/li>
&lt;/ol>
&lt;p>现在，让我们通过三个具体的例子来看看VLOOKUP如何在实际业务中应用。&lt;/p>
&lt;h2 id="例子1电商平台订单处理">例子1：电商平台订单处理
&lt;/h2>&lt;p>想象你经营一个在线商店，每天需要处理数百个订单。使用VLOOKUP，你可以轻松地从产品数据库中提取所需信息，自动填充订单详情。&lt;/p>
&lt;p>订单表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">订单号&lt;/th>
&lt;th style="text-align: left">产品编码&lt;/th>
&lt;th style="text-align: left">数量&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">001&lt;/td>
&lt;td style="text-align: left">P1001&lt;/td>
&lt;td style="text-align: left">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">002&lt;/td>
&lt;td style="text-align: left">P1002&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">003&lt;/td>
&lt;td style="text-align: left">P1003&lt;/td>
&lt;td style="text-align: left">3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>产品数据库：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">产品编码&lt;/th>
&lt;th style="text-align: left">产品名称&lt;/th>
&lt;th style="text-align: left">单价&lt;/th>
&lt;th style="text-align: left">库存数量&lt;/th>
&lt;th style="text-align: left">预计发货时间&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">P1001&lt;/td>
&lt;td style="text-align: left">笔记本电脑&lt;/td>
&lt;td style="text-align: left">4999&lt;/td>
&lt;td style="text-align: left">50&lt;/td>
&lt;td style="text-align: left">1天&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">P1002&lt;/td>
&lt;td style="text-align: left">智能手机&lt;/td>
&lt;td style="text-align: left">2999&lt;/td>
&lt;td style="text-align: left">100&lt;/td>
&lt;td style="text-align: left">2天&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">P1003&lt;/td>
&lt;td style="text-align: left">蓝牙耳机&lt;/td>
&lt;td style="text-align: left">499&lt;/td>
&lt;td style="text-align: left">200&lt;/td>
&lt;td style="text-align: left">即日&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>使用VLOOKUP，我们可以自动填充订单表中的产品信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">=VLOOKUP(B2, 产品数据库!A:E, 2, FALSE) // 查找产品名称
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=VLOOKUP(B2, 产品数据库!A:E, 3, FALSE) // 查找单价
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=IF(VLOOKUP(B2, 产品数据库!A:E, 4, FALSE)&amp;gt;=C2, &amp;#34;有货&amp;#34;, &amp;#34;缺货&amp;#34;) // 检查库存状态
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">=VLOOKUP(B2, 产品数据库!A:E, 5, FALSE) // 查找预计发货时间
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="例子2销售佣金计算">例子2：销售佣金计算
&lt;/h2>&lt;p>假设你的公司有不同级别的销售人员，佣金比例根据销售额和级别而变化。VLOOKUP可以帮助你快速计算每个销售员的佣金。&lt;/p>
&lt;p>销售数据表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">销售员ID&lt;/th>
&lt;th style="text-align: left">销售额&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">S001&lt;/td>
&lt;td style="text-align: left">8000&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">S002&lt;/td>
&lt;td style="text-align: left">15000&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">S003&lt;/td>
&lt;td style="text-align: left">3000&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>佣金比例表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">销售额范围&lt;/th>
&lt;th style="text-align: left">初级销售&lt;/th>
&lt;th style="text-align: left">中级销售&lt;/th>
&lt;th style="text-align: left">高级销售&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">0-5000&lt;/td>
&lt;td style="text-align: left">3%&lt;/td>
&lt;td style="text-align: left">5%&lt;/td>
&lt;td style="text-align: left">7%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5001-10000&lt;/td>
&lt;td style="text-align: left">5%&lt;/td>
&lt;td style="text-align: left">7%&lt;/td>
&lt;td style="text-align: left">9%&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">10001+&lt;/td>
&lt;td style="text-align: left">7%&lt;/td>
&lt;td style="text-align: left">9%&lt;/td>
&lt;td style="text-align: left">11%&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>员工信息表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">员工ID&lt;/th>
&lt;th style="text-align: left">姓名&lt;/th>
&lt;th style="text-align: left">级别&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">S001&lt;/td>
&lt;td style="text-align: left">张三&lt;/td>
&lt;td style="text-align: left">初级&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">S002&lt;/td>
&lt;td style="text-align: left">李四&lt;/td>
&lt;td style="text-align: left">高级&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">S003&lt;/td>
&lt;td style="text-align: left">王五&lt;/td>
&lt;td style="text-align: left">中级&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>使用VLOOKUP和嵌套IF，我们可以自动计算佣金：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">=IF(VLOOKUP(A2, 员工信息表!A:C, 3, FALSE)=&amp;#34;初级&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> B2 * VLOOKUP(B2, 佣金比例表!A:D, 2, TRUE),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IF(VLOOKUP(A2, 员工信息表!A:C, 3, FALSE)=&amp;#34;中级&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> B2 * VLOOKUP(B2, 佣金比例表!A:D, 3, TRUE),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> B2 * VLOOKUP(B2, 佣金比例表!A:D, 4, TRUE)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="例子3动态酒店定价系统">例子3：动态酒店定价系统
&lt;/h2>&lt;p>假设你经营一家酒店，房价会根据季节、是否周末和客户类型而变化。VLOOKUP可以帮助你实现动态定价。&lt;/p>
&lt;p>价格表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">季节&lt;/th>
&lt;th style="text-align: left">工作日普通&lt;/th>
&lt;th style="text-align: left">工作日VIP&lt;/th>
&lt;th style="text-align: left">周末普通&lt;/th>
&lt;th style="text-align: left">周末VIP&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">春&lt;/td>
&lt;td style="text-align: left">300&lt;/td>
&lt;td style="text-align: left">270&lt;/td>
&lt;td style="text-align: left">400&lt;/td>
&lt;td style="text-align: left">360&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">夏&lt;/td>
&lt;td style="text-align: left">400&lt;/td>
&lt;td style="text-align: left">360&lt;/td>
&lt;td style="text-align: left">500&lt;/td>
&lt;td style="text-align: left">450&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">秋&lt;/td>
&lt;td style="text-align: left">350&lt;/td>
&lt;td style="text-align: left">315&lt;/td>
&lt;td style="text-align: left">450&lt;/td>
&lt;td style="text-align: left">405&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">冬&lt;/td>
&lt;td style="text-align: left">250&lt;/td>
&lt;td style="text-align: left">225&lt;/td>
&lt;td style="text-align: left">350&lt;/td>
&lt;td style="text-align: left">315&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>预订表：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">预订日期&lt;/th>
&lt;th style="text-align: left">客户类型&lt;/th>
&lt;th style="text-align: left">是否周末&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">2023/7/15&lt;/td>
&lt;td style="text-align: left">VIP&lt;/td>
&lt;td style="text-align: left">是&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2023/10/5&lt;/td>
&lt;td style="text-align: left">普通&lt;/td>
&lt;td style="text-align: left">否&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2023/1/1&lt;/td>
&lt;td style="text-align: left">VIP&lt;/td>
&lt;td style="text-align: left">是&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>使用VLOOKUP结合其他函数来自动计算房价：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">=VLOOKUP(LOOKUP(MONTH(A2), {1,3,6,9,12}, {&amp;#34;冬&amp;#34;,&amp;#34;春&amp;#34;,&amp;#34;夏&amp;#34;,&amp;#34;秋&amp;#34;,&amp;#34;冬&amp;#34;}), 价格表!A:E,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> IF(C2=&amp;#34;是&amp;#34;, IF(B2=&amp;#34;VIP&amp;#34;, 5, 4), IF(B2=&amp;#34;VIP&amp;#34;, 3, 2)), FALSE)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个公式首先根据月份确定季节，然后根据客户类型和是否周末选择正确的价格。&lt;/p>
&lt;h2 id="结论">结论
&lt;/h2>&lt;p>通过这些例子，我们可以看到VLOOKUP不仅仅是一个简单的查找工具，它还是一个强大的数据处理和自动化工具。无论是处理大量订单、计算复杂的佣金还是实现动态定价系统，VLOOKUP都能大显身手，帮助我们提高工作效率，减少错误，并处理复杂的业务逻辑。&lt;/p>
&lt;p>掌握VLOOKUP，你将拥有一个处理各种Excel任务的强大武器。所以，下次当你面对复杂的数据处理任务时，别忘了考虑使用这个Excel的&amp;quot;大利器&amp;quot;！&lt;/p></description></item></channel></rss>